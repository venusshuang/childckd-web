<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="childckd.dao.AdministratorMapper" >
  <resultMap id="BaseResultMap" type="childckd.model.Administrator" >
    <id column="administratorid" property="administratorid" jdbcType="VARCHAR" />
    <result column="zhanghao" property="zhanghao" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="roleid" property="roleid" jdbcType="VARCHAR" />
    <result column="rolename" property="rolename" jdbcType="VARCHAR" />
    <result column="beizhu" property="beizhu" jdbcType="VARCHAR" />
    <result column="zhuangtai" property="zhuangtai" jdbcType="INTEGER" />
    <result column="parentadminid" property="parentadminid" jdbcType="VARCHAR" />
  </resultMap>

  <select id="findAdministratorByZhanghao" resultType="Map">
  	select ad.administratorid,ad.zhanghao,ad.rolename,ad.beizhu,ad.parentadminid
	from administrator AS ad
	where ad.zhanghao like CONCAT('%',#{ppZhanghao},'%')
    order by ad.zhanghao
  </select>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    administratorid, zhanghao, password, roleid, rolename, beizhu, zhuangtai, parentadminid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="childckd.model.AdministratorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from administrator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from administrator
    where administratorid = #{administratorid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from administrator
    where administratorid = #{administratorid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="childckd.model.AdministratorExample" >
    delete from administrator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="childckd.model.Administrator" >
    insert into administrator (administratorid, zhanghao, password, 
      roleid, rolename, beizhu, 
      zhuangtai, parentadminid)
    values (#{administratorid,jdbcType=VARCHAR}, #{zhanghao,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{roleid,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, #{beizhu,jdbcType=VARCHAR}, 
      #{zhuangtai,jdbcType=INTEGER}, #{parentadminid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="childckd.model.Administrator" >
    insert into administrator
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="administratorid != null" >
        administratorid,
      </if>
      <if test="zhanghao != null" >
        zhanghao,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="roleid != null" >
        roleid,
      </if>
      <if test="rolename != null" >
        rolename,
      </if>
      <if test="beizhu != null" >
        beizhu,
      </if>
      <if test="zhuangtai != null" >
        zhuangtai,
      </if>
      <if test="parentadminid != null" >
        parentadminid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="administratorid != null" >
        #{administratorid,jdbcType=VARCHAR},
      </if>
      <if test="zhanghao != null" >
        #{zhanghao,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="beizhu != null" >
        #{beizhu,jdbcType=VARCHAR},
      </if>
      <if test="zhuangtai != null" >
        #{zhuangtai,jdbcType=INTEGER},
      </if>
      <if test="parentadminid != null" >
        #{parentadminid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="childckd.model.AdministratorExample" resultType="java.lang.Integer" >
    select count(*) from administrator
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update administrator
    <set >
      <if test="record.administratorid != null" >
        administratorid = #{record.administratorid,jdbcType=VARCHAR},
      </if>
      <if test="record.zhanghao != null" >
        zhanghao = #{record.zhanghao,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.roleid != null" >
        roleid = #{record.roleid,jdbcType=VARCHAR},
      </if>
      <if test="record.rolename != null" >
        rolename = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.beizhu != null" >
        beizhu = #{record.beizhu,jdbcType=VARCHAR},
      </if>
      <if test="record.zhuangtai != null" >
        zhuangtai = #{record.zhuangtai,jdbcType=INTEGER},
      </if>
      <if test="record.parentadminid != null" >
        parentadminid = #{record.parentadminid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update administrator
    set administratorid = #{record.administratorid,jdbcType=VARCHAR},
      zhanghao = #{record.zhanghao,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      roleid = #{record.roleid,jdbcType=VARCHAR},
      rolename = #{record.rolename,jdbcType=VARCHAR},
      beizhu = #{record.beizhu,jdbcType=VARCHAR},
      zhuangtai = #{record.zhuangtai,jdbcType=INTEGER},
      parentadminid = #{record.parentadminid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="childckd.model.Administrator" >
    update administrator
    <set >
      <if test="zhanghao != null" >
        zhanghao = #{zhanghao,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        roleid = #{roleid,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="beizhu != null" >
        beizhu = #{beizhu,jdbcType=VARCHAR},
      </if>
      <if test="zhuangtai != null" >
        zhuangtai = #{zhuangtai,jdbcType=INTEGER},
      </if>
      <if test="parentadminid != null" >
        parentadminid = #{parentadminid,jdbcType=VARCHAR},
      </if>
    </set>
    where administratorid = #{administratorid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="childckd.model.Administrator" >
    update administrator
    set zhanghao = #{zhanghao,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      roleid = #{roleid,jdbcType=VARCHAR},
      rolename = #{rolename,jdbcType=VARCHAR},
      beizhu = #{beizhu,jdbcType=VARCHAR},
      zhuangtai = #{zhuangtai,jdbcType=INTEGER},
      parentadminid = #{parentadminid,jdbcType=VARCHAR}
    where administratorid = #{administratorid,jdbcType=VARCHAR}
  </update>
</mapper>