<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="childckd.dao.ScheduleMapper" >
  <resultMap id="BaseResultMap" type="childckd.model.Schedule" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="xingqi" property="xingqi" jdbcType="INTEGER" />
    <result column="shangxiawu" property="shangxiawu" jdbcType="VARCHAR" />
    <result column="zhuanjiaxingming" property="zhuanjiaxingming" jdbcType="VARCHAR" />
    <result column="guahaoleibie" property="guahaoleibie" jdbcType="VARCHAR" />
    <result column="xianhaoshu" property="xianhaoshu" jdbcType="INTEGER" />
    <result column="jiage" property="jiage" jdbcType="REAL" />
    <result column="expertid" property="expertid" jdbcType="VARCHAR" />
    <result column="zhuangtai" property="zhuangtai" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, xingqi, shangxiawu, zhuanjiaxingming, guahaoleibie, xianhaoshu, jiage, expertid, 
    zhuangtai
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="childckd.model.ScheduleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from schedule
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from schedule
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="childckd.model.ScheduleExample" >
    delete from schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="childckd.model.Schedule" >
    insert into schedule (id, xingqi, shangxiawu, 
      zhuanjiaxingming, guahaoleibie, xianhaoshu, 
      jiage, expertid, zhuangtai
      )
    values (#{id,jdbcType=VARCHAR}, #{xingqi,jdbcType=INTEGER}, #{shangxiawu,jdbcType=VARCHAR}, 
      #{zhuanjiaxingming,jdbcType=VARCHAR}, #{guahaoleibie,jdbcType=VARCHAR}, #{xianhaoshu,jdbcType=INTEGER}, 
      #{jiage,jdbcType=REAL}, #{expertid,jdbcType=VARCHAR}, #{zhuangtai,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="childckd.model.Schedule" >
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="xingqi != null" >
        xingqi,
      </if>
      <if test="shangxiawu != null" >
        shangxiawu,
      </if>
      <if test="zhuanjiaxingming != null" >
        zhuanjiaxingming,
      </if>
      <if test="guahaoleibie != null" >
        guahaoleibie,
      </if>
      <if test="xianhaoshu != null" >
        xianhaoshu,
      </if>
      <if test="jiage != null" >
        jiage,
      </if>
      <if test="expertid != null" >
        expertid,
      </if>
      <if test="zhuangtai != null" >
        zhuangtai,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="xingqi != null" >
        #{xingqi,jdbcType=INTEGER},
      </if>
      <if test="shangxiawu != null" >
        #{shangxiawu,jdbcType=VARCHAR},
      </if>
      <if test="zhuanjiaxingming != null" >
        #{zhuanjiaxingming,jdbcType=VARCHAR},
      </if>
      <if test="guahaoleibie != null" >
        #{guahaoleibie,jdbcType=VARCHAR},
      </if>
      <if test="xianhaoshu != null" >
        #{xianhaoshu,jdbcType=INTEGER},
      </if>
      <if test="jiage != null" >
        #{jiage,jdbcType=REAL},
      </if>
      <if test="expertid != null" >
        #{expertid,jdbcType=VARCHAR},
      </if>
      <if test="zhuangtai != null" >
        #{zhuangtai,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="childckd.model.ScheduleExample" resultType="java.lang.Integer" >
    select count(*) from schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update schedule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.xingqi != null" >
        xingqi = #{record.xingqi,jdbcType=INTEGER},
      </if>
      <if test="record.shangxiawu != null" >
        shangxiawu = #{record.shangxiawu,jdbcType=VARCHAR},
      </if>
      <if test="record.zhuanjiaxingming != null" >
        zhuanjiaxingming = #{record.zhuanjiaxingming,jdbcType=VARCHAR},
      </if>
      <if test="record.guahaoleibie != null" >
        guahaoleibie = #{record.guahaoleibie,jdbcType=VARCHAR},
      </if>
      <if test="record.xianhaoshu != null" >
        xianhaoshu = #{record.xianhaoshu,jdbcType=INTEGER},
      </if>
      <if test="record.jiage != null" >
        jiage = #{record.jiage,jdbcType=REAL},
      </if>
      <if test="record.expertid != null" >
        expertid = #{record.expertid,jdbcType=VARCHAR},
      </if>
      <if test="record.zhuangtai != null" >
        zhuangtai = #{record.zhuangtai,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update schedule
    set id = #{record.id,jdbcType=VARCHAR},
      xingqi = #{record.xingqi,jdbcType=INTEGER},
      shangxiawu = #{record.shangxiawu,jdbcType=VARCHAR},
      zhuanjiaxingming = #{record.zhuanjiaxingming,jdbcType=VARCHAR},
      guahaoleibie = #{record.guahaoleibie,jdbcType=VARCHAR},
      xianhaoshu = #{record.xianhaoshu,jdbcType=INTEGER},
      jiage = #{record.jiage,jdbcType=REAL},
      expertid = #{record.expertid,jdbcType=VARCHAR},
      zhuangtai = #{record.zhuangtai,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="childckd.model.Schedule" >
    update schedule
    <set >
      <if test="xingqi != null" >
        xingqi = #{xingqi,jdbcType=INTEGER},
      </if>
      <if test="shangxiawu != null" >
        shangxiawu = #{shangxiawu,jdbcType=VARCHAR},
      </if>
      <if test="zhuanjiaxingming != null" >
        zhuanjiaxingming = #{zhuanjiaxingming,jdbcType=VARCHAR},
      </if>
      <if test="guahaoleibie != null" >
        guahaoleibie = #{guahaoleibie,jdbcType=VARCHAR},
      </if>
      <if test="xianhaoshu != null" >
        xianhaoshu = #{xianhaoshu,jdbcType=INTEGER},
      </if>
      <if test="jiage != null" >
        jiage = #{jiage,jdbcType=REAL},
      </if>
      <if test="expertid != null" >
        expertid = #{expertid,jdbcType=VARCHAR},
      </if>
      <if test="zhuangtai != null" >
        zhuangtai = #{zhuangtai,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="childckd.model.Schedule" >
    update schedule
    set xingqi = #{xingqi,jdbcType=INTEGER},
      shangxiawu = #{shangxiawu,jdbcType=VARCHAR},
      zhuanjiaxingming = #{zhuanjiaxingming,jdbcType=VARCHAR},
      guahaoleibie = #{guahaoleibie,jdbcType=VARCHAR},
      xianhaoshu = #{xianhaoshu,jdbcType=INTEGER},
      jiage = #{jiage,jdbcType=REAL},
      expertid = #{expertid,jdbcType=VARCHAR},
      zhuangtai = #{zhuangtai,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>